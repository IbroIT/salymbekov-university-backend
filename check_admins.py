#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–∫ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–µ–π
"""
import os
import re
from pathlib import Path

def check_admin_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ admin.py —Ñ–∞–π–ª—ã"""
    print("=== –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–î–ú–ò–ù–û–ö ===\n")
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ admin.py —Ñ–∞–π–ª—ã
    admin_files = list(Path('.').glob('*/admin.py'))
    
    issues = []
    
    for admin_file in admin_files:
        print(f"üìÅ –§–∞–π–ª: {admin_file}")
        
        try:
            content = admin_file.read_text(encoding='utf-8')
            
            # –ò—â–µ–º –ø–æ–ª—è —Å _ky (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å _kg)
            ky_fields = re.findall(r'[\'\"]([a-zA-Z_]*_ky)[\'\"]', content)
            if ky_fields:
                issues.append((str(admin_file), 'ky_fields', ky_fields))
                print(f"   ‚ùå –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—è —Å _ky: {ky_fields}")
            
            # –ò—â–µ–º –º–µ—Ç–æ–¥—ã preview –±–µ–∑ readonly_fields
            preview_methods = re.findall(r'def ([a-zA-Z_]*_preview)\(', content)
            has_readonly = 'readonly_fields' in content
            
            if preview_methods and not has_readonly:
                issues.append((str(admin_file), 'missing_readonly', preview_methods))
                print(f"   ‚ö†Ô∏è –ú–µ—Ç–æ–¥—ã preview –±–µ–∑ readonly_fields: {preview_methods}")
            elif preview_methods and has_readonly:
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥—ã preview —Å readonly_fields: {preview_methods}")
            
            # –ò—â–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –≤ fieldsets
            fieldset_matches = re.findall(r'\'fields\':\s*\([^)]*\)', content)
            for match in fieldset_matches:
                # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                if '_ky' in match:
                    print(f"   ‚ùå –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ fieldsets: {match}")
            
            if not ky_fields and not (preview_methods and not has_readonly):
                print(f"   ‚úÖ –ê–¥–º–∏–Ω–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            
        print()
    
    print("\n=== –°–í–û–î–ö–ê –ü–†–û–ë–õ–ï–ú ===")
    if not issues:
        print("‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    else:
        for file_path, issue_type, details in issues:
            if issue_type == 'ky_fields':
                print(f"‚ùå {file_path}: –ü–æ–ª—è —Å _ky –≤–º–µ—Å—Ç–æ _kg: {details}")
            elif issue_type == 'missing_readonly':
                print(f"‚ö†Ô∏è {file_path}: –ú–µ—Ç–æ–¥—ã preview –±–µ–∑ readonly_fields: {details}")

if __name__ == "__main__":
    check_admin_files()
