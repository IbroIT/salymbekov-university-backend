#!/usr/bin/env python
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∫–∏ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ CRUD –æ–ø–µ—Ä–∞—Ü–∏—è–º
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import os
import django
import requests
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'back_su_m.settings')
django.setup()

from django.contrib.auth.models import User
from django.contrib.admin import site
from django.conf import settings

class AdminReadinessCheck:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∫–∏ –∫ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"""
    
    def __init__(self):
        self.server_url = "http://127.0.0.1:8000"
        self.admin_url = f"{self.server_url}/admin/"
        self.results = []
    
    def check_server_running(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä"""
        print("üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Django —Å–µ—Ä–≤–µ—Ä...")
        try:
            response = requests.get(self.server_url, timeout=5)
            if response.status_code in [200, 404]:  # 404 —Ç–æ–∂–µ OK, –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç
                print("   ‚úÖ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç")
                return True
            else:
                print(f"   ‚ùå –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º {response.status_code}")
                return False
        except requests.exceptions.ConnectionError:
            print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print("   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
            return False
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            return False
    
    def check_admin_accessibility(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∫–∏"""
        print("\nüîë –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∫–∏...")
        try:
            response = requests.get(self.admin_url, timeout=5)
            if response.status_code == 200:
                print("   ‚úÖ –ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É /admin/")
                return True
            elif response.status_code == 302:
                print("   ‚úÖ –ê–¥–º–∏–Ω–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
                return True
            else:
                print(f"   ‚ùå –ê–¥–º–∏–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.status_code})")
                return False
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∫–∏: {e}")
            return False
    
    def check_superuser_exists(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("\nüë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        try:
            superusers = User.objects.filter(is_superuser=True)
            if superusers.exists():
                usernames = [user.username for user in superusers]
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(usernames)} —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {', '.join(usernames)}")
                return True, usernames
            else:
                print("   ‚ùå –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                print("   üí° –°–æ–∑–¥–∞–π—Ç–µ: python manage.py createsuperuser")
                return False, []
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
            return False, []
    
    def check_registered_models(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ"""
        print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏...")
        try:
            registered_models = []
            for model, admin_class in site._registry.items():
                app_label = model._meta.app_label
                model_name = model._meta.model_name
                if app_label not in ['auth', 'admin', 'sessions', 'contenttypes']:
                    registered_models.append(f"{app_label}.{model_name}")
            
            print(f"   ‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(registered_models)} –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:")
            for model in sorted(registered_models):
                print(f"      ‚Ä¢ {model}")
            return True, registered_models
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–æ–¥–µ–ª–µ–π: {e}")
            return False, []
    
    def check_static_files(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"""
        print("\nüé® –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏...")
        try:
            css_file = os.path.join(settings.BASE_DIR, 'static', 'admin', 'css', 'custom_admin.css')
            if os.path.exists(css_file):
                print("   ‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π CSS —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
                with open(css_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                    if '#3b82f6' in content:  # –ù–∞—à —Å–∏–Ω–∏–π —Ü–≤–µ—Ç
                        print("   ‚úÖ –°–∏–Ω–∏–π –¥–∏–∑–∞–π–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ CSS")
                        return True
                    else:
                        print("   ‚ö†Ô∏è CSS —Ñ–∞–π–ª –µ—Å—Ç—å, –Ω–æ —Å–∏–Ω–∏–π –¥–∏–∑–∞–π–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        return False
            else:
                print("   ‚ùå –ö–∞—Å—Ç–æ–º–Ω—ã–π CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CSS: {e}")
            return False
    
    def generate_test_instructions(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        print("\nüìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        
        instructions = f"""
üéØ –ì–û–¢–û–í–û –ö –†–£–ß–ù–û–ú–£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ!

üåê –ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∫–∏: {self.admin_url}

üîë –î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
   (–ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ —Ä–∞–Ω–µ–µ)

üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:

1. üèóÔ∏è CREATE (–°–æ–∑–¥–∞–Ω–∏–µ):
   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –±–∞–Ω–Ω–µ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ Banner ‚Üí Banners
   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª –≤ —Ä–∞–∑–¥–µ–ª–µ Careers ‚Üí Departments
   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ News ‚Üí News

2. üëÄ READ (–ü—Ä–æ—Å–º–æ—Ç—Ä):
   ‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–∏—Å–∫–∏ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

3. ‚úèÔ∏è UPDATE (–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ):
   ‚Ä¢ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

4. üóëÔ∏è DELETE (–£–¥–∞–ª–µ–Ω–∏–µ):
   ‚Ä¢ –£–¥–∞–ª–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ, —Ç–∞–∫ –∏ –µ–¥–∏–Ω–∏—á–Ω–æ–µ

üí° TIPS:
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–Ω–∏–π –¥–∏–∑–∞–π–Ω
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–µ –ø–æ–ª—è (ru/kg/en)
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–µ–≤—å—é

‚ö†Ô∏è –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:
‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω
"""
        print(instructions)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª
        with open('MANUAL_TEST_INSTRUCTIONS.txt', 'w', encoding='utf-8') as f:
            f.write(instructions)
        print("   ‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ MANUAL_TEST_INSTRUCTIONS.txt")
    
    def run_check(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫"""
        print("üöÄ –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò DJANGO –ê–î–ú–ò–ù–ö–ò –ö –†–£–ß–ù–û–ú–£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
        print("=" * 70)
        print(f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        
        checks = [
            ("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω", self.check_server_running),
            ("–ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞", self.check_admin_accessibility),
            ("–°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", lambda: self.check_superuser_exists()[0]),
            ("–ú–æ–¥–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", lambda: self.check_registered_models()[0]),
            ("CSS —Å—Ç–∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã", self.check_static_files)
        ]
        
        passed_checks = 0
        for check_name, check_func in checks:
            if check_func():
                passed_checks += 1
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢: {passed_checks}/{len(checks)} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed_checks == len(checks):
            print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
            print("üöÄ –ê–¥–º–∏–Ω–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é CRUD –æ–ø–µ—Ä–∞—Ü–∏–π!")
            self.generate_test_instructions()
        elif passed_checks >= 3:
            print("\nüëç –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å")
            print("‚ö†Ô∏è –ù–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–∏—Ç –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
            self.generate_test_instructions()
        else:
            print("\n‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—Ä–æ–±–ª–µ–º –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞")

if __name__ == "__main__":
    checker = AdminReadinessCheck()
    checker.run_check()
