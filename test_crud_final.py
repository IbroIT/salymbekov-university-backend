#!/usr/bin/env python
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã: Vacancy.posted_date –∏ NewsView permissions
"""
import os
import django
from django.test.utils import setup_test_environment, teardown_test_environment
from django.test.runner import DiscoverRunner
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'back_su_m.settings')
django.setup()

from django.contrib.admin import site
from django.contrib.auth.models import User
from django.test import TestCase, Client
from django.urls import reverse
from django.utils import timezone
import json

class FinalCRUDTest:
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    
    def __init__(self):
        self.client = Client()
        self.admin_user = None
        self.results = {
            'fixed_models': [],
            'successful_models': [],
            'failed_models': [],
            'errors': [],
            'warnings': []
        }
    
    def setup(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...")
        
        try:
            self.admin_user = User.objects.filter(is_superuser=True).first()
            if self.admin_user:
                # –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                self.admin_user.set_password('testpass123')
                self.admin_user.save()
                login_success = self.client.login(username=self.admin_user.username, password='testpass123')
                if login_success:
                    print(f"   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ {self.admin_user.username}")
                    return True
            
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
            return False
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            return False
    
    def test_fixed_issues(self):
        """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º"""
        print("\nüîç –¢–ï–°–¢–ò–†–£–ï–ú –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        print("=" * 50)
        
        # 1. –¢–µ—Å—Ç Vacancy - –¥–æ–ª–∂–µ–Ω —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—Ç—å
        print("1. üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º careers.vacancy (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å posted_date)...")
        try:
            # –°–ø–∏—Å–æ–∫
            list_url = reverse('admin:careers_vacancy_changelist')
            response = self.client.get(list_url)
            if response.status_code == 200:
                print("   ‚úÖ –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
            else:
                print(f"   ‚ùå –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
            
            # –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            add_url = reverse('admin:careers_vacancy_add')
            response = self.client.get(add_url)
            if response.status_code == 200:
                print("   ‚úÖ –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                self.results['fixed_models'].append('careers.vacancy')
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é
                from careers.models import CareerCategory, Department
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
                category, _ = CareerCategory.objects.get_or_create(
                    name='test_category',
                    defaults={
                        'display_name_ru': '–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
                        'display_name_kg': '–¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Å—ã',
                        'display_name_en': 'Test Category'
                    }
                )
                
                department, _ = Department.objects.get_or_create(
                    short_name='TEST',
                    defaults={
                        'name_ru': '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–¥–µ–ª',
                        'name_kg': '–¢–µ—Å—Ç –±”©–ª“Ø–º“Ø',
                        'name_en': 'Test Department',
                        'contact_email': 'test@example.com'
                    }
                )
                
                test_data = {
                    'title_ru': '–¢–µ—Å—Ç–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è',
                    'title_kg': '–¢–µ—Å—Ç –∂—É–º—É—à –æ—Ä–¥—É',
                    'title_en': 'Test Position',
                    'slug': 'test-vacancy',
                    'category': category.id,
                    'department': department.id,
                    'status': 'draft',
                    'employment_type': 'full_time',
                    'location_ru': '–ë–∏—à–∫–µ–∫',
                    'location_kg': '–ë–∏—à–∫–µ–∫',
                    'location_en': 'Bishkek',
                    'short_description_ru': '–¢–µ—Å—Ç',
                    'short_description_kg': '–¢–µ—Å—Ç',
                    'short_description_en': 'Test',
                    'description_ru': '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                    'description_kg': '–¢–µ—Å—Ç —Å“Ø—Ä”©—Ç—Ç”©–º”©',
                    'description_en': 'Test description',
                    'responsibilities_ru': '–¢–µ—Å—Ç–æ–≤—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏',
                    'responsibilities_kg': '–¢–µ—Å—Ç –º–∏–ª–¥–µ—Ç—Ç–µ—Ä',
                    'responsibilities_en': 'Test responsibilities',
                    'requirements_ru': '–¢–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
                    'requirements_kg': '–¢–µ—Å—Ç —Ç–∞–ª–∞–ø—Ç–∞—Ä',
                    'requirements_en': 'Test requirements',
                    'contact_email': 'hr@example.com'
                }
                
                create_response = self.client.post(add_url, test_data)
                if create_response.status_code == 302:
                    print("   üéâ –°–û–ó–î–ê–ù–ò–ï –í–ê–ö–ê–ù–°–ò–ò –†–ê–ë–û–¢–ê–ï–¢!")
                else:
                    print(f"   ‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ (–∫–æ–¥: {create_response.status_code})")
                    
            else:
                print(f"   ‚ùå –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.status_code})")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–µ vacancy: {e}")
        
        # 2. –¢–µ—Å—Ç NewsView - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
        print("\n2. üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º news.newsview (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è)...")
        try:
            # –°–ø–∏—Å–æ–∫ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å
            list_url = reverse('admin:news_newsview_changelist')
            response = self.client.get(list_url)
            if response.status_code == 200:
                print("   ‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–æ—Å—Ç—É–ø–µ–Ω")
                
                # –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–∞
                add_url = reverse('admin:news_newsview_add')
                response = self.client.get(add_url)
                if response.status_code == 403:
                    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ (–∫–æ–¥ 403)")
                    self.results['fixed_models'].append('news.newsview')
                else:
                    print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {response.status_code}")
                    
            else:
                print(f"   ‚ùå –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–µ newsview: {e}")
    
    def test_key_models(self):
        """–¢–µ—Å—Ç –∫–ª—é—á–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Ö —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"""
        print("\nüéØ –¢–ï–°–¢–ò–†–£–ï–ú –ö–õ–Æ–ß–ï–í–´–ï –ú–û–î–ï–õ–ò:")
        print("=" * 40)
        
        key_models = [
            ('banner.banner', 'Banner'),
            ('news.news', 'News'), 
            ('research.researcharea', 'Research Area'),
            ('careers.department', 'Department')
        ]
        
        for app_model, display_name in key_models:
            app_label, model_name = app_model.split('.')
            print(f"üß™ {display_name}...")
            
            try:
                # –°–ø–∏—Å–æ–∫
                list_url = reverse(f'admin:{app_label}_{model_name}_changelist')
                response = self.client.get(list_url)
                if response.status_code == 200:
                    print(f"   ‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
                    
                    # –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                    add_url = reverse(f'admin:{app_label}_{model_name}_add')
                    response = self.client.get(add_url)
                    if response.status_code == 200:
                        print(f"   ‚úÖ –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
                        self.results['successful_models'].append(app_model)
                    else:
                        print(f"   ‚ùå –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–∫–æ–¥: {response.status_code})")
                        self.results['failed_models'].append(app_model)
                else:
                    print(f"   ‚ùå –°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status_code})")
                    self.results['failed_models'].append(app_model)
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                self.results['errors'].append(f"{app_model}: {e}")
    
    def run_test(self):
        """–ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
        print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô CRUD –¢–ï–°–¢ - –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
        print("=" * 60)
        
        if not self.setup():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
            return
        
        # –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        self.test_fixed_issues()
        
        # –¢–µ—Å—Ç –∫–ª—é—á–µ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π  
        self.test_key_models()
        
        self.print_results()
    
    def print_results(self):
        """–í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        print("\n" + "=" * 60)
        print("üèÜ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê")
        print("=" * 60)
        
        if self.results['fixed_models']:
            print(f"\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ú–û–î–ï–õ–ò ({len(self.results['fixed_models'])}):")
            for model in self.results['fixed_models']:
                print(f"   üîß {model}")
        
        if self.results['successful_models']:
            print(f"\n‚úÖ –†–ê–ë–û–¢–ê–Æ–©–ò–ï –ú–û–î–ï–õ–ò ({len(self.results['successful_models'])}):")
            for model in self.results['successful_models']:
                print(f"   ‚úÖ {model}")
        
        if self.results['failed_models']:
            print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ù–´–ï –ú–û–î–ï–õ–ò ({len(self.results['failed_models'])}):")
            for model in self.results['failed_models']:
                print(f"   ‚ùå {model}")
        
        if self.results['errors']:
            print(f"\nüí• –û–®–ò–ë–ö–ò ({len(self.results['errors'])}):")
            for error in self.results['errors']:
                print(f"   üí• {error}")
        
        # –ò—Ç–æ–≥
        total_fixed = len(self.results['fixed_models'])
        total_successful = len(self.results['successful_models'])
        total_failed = len(self.results['failed_models'])
        total_tested = total_fixed + total_successful + total_failed
        
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {total_fixed}")
        print(f"   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç: {total_successful}")
        print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã: {total_failed}")
        print(f"   üìù –í—Å–µ–≥–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: {total_tested}")
        
        if total_fixed >= 2:
            print("\nüéâ –û–¢–õ–ò–ß–ù–û! –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
            print("   ‚úÖ Vacancy –∞–¥–º–∏–Ω–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("   ‚úÖ NewsView –∞–¥–º–∏–Ω–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        elif total_fixed >= 1:
            print("\nüëç –ü—Ä–æ–≥—Ä–µ—Å—Å –µ—Å—Ç—å, –Ω–æ –Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å")
        else:
            print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã –Ω–µ —Ä–µ—à–µ–Ω—ã")
        
        print(f"\nüöÄ Django –∞–¥–º–∏–Ω–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    tester = FinalCRUDTest()
    tester.run_test()
